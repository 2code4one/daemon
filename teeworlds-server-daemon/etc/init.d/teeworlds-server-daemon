#!/bin/bash  

# Get configuration
if [ -f /etc/default/teeworlds-server-daemon ]; then
	. /etc/default/teeworlds-server-daemon
else
	echo '/etc/default/teeworlds-server-daemon not found'
	exit 1
fi

# Get lsb functions
if [ -f /lib/lsb/init-functions ]; then
	. /lib/lsb/init-functions
else
	echo '/lib/lsb/init-functions not found'
	exit 1
fi

# Commands
case "$1" in

	# Start servers
	start)
		log_begin_msg 'Starting Teeworlds servers...'

		# Get the date 
		date=$(date +%Y/%m/%d)
		hour=$(date +%H:%M)

		# Count started server
		started=0

		# Loop on config files
		for config in $(ls $SETTINGS | grep .cfg)
		do
			# Check if already started 
			already=$(cat $RUNNING | grep $config | wc -l)
			if [ $already = '1' ]
			then
				log_success_msg "$config is already running"
				continue
			fi

			# Get absolute path
			log="$LOGS/$config.log"
			settings="$SETTINGS/$config"

			# Copy settings
			cp --remove-destination $settings $TMP
			tmpsettings="$TMP/$config"

			# Remove unwanted settings
			cat $tmpsettings | grep --invert-match '#!' > $tmpsettings
			cat $tmpsettings | grep --invert-match 'logfile' > $tmpsettings

			# Get the server binary
			srv='vanilla'
			specialsrv=$(cat $settings | grep '#!' | wc -l)
			if [ $specialsrv = '1' ]
			then
				srv=$(cat $settings | grep '#!' | cut -d '!' -f 2)
			fi
			server="$SERVERS/$srv"

			# Check if server binary exists
			if [ -f $server ]
			then
				# Start the server
				nohup $server -f $tmpsettings > $log 2>&1 < /dev/null &

				# Get the PID and log it
				pid=$!
				echo "$config started $pid $date $hour" >> $RUNNING

				# Count started server
				started=$(expr $started + 1)

				# Server started
				log_success_msg "$config ($srv) started"
			else
				# No binary found 
				log_failure_msg "$config: binary '$srv' not found"
			fi
		done

		# Success
		log_success_msg "$started server(s) started"
		log_end_msg $?
	;;

	# Stop servers
	stop)
		log_begin_msg 'Stopping Teeworlds servers...'

		log_end_msg $?
	;;

	# Restart servers
	restart)
		# Stop and start servers with a "in-between" pause
		$LAUNCHER stop
		sleep 1
		$LAUNCHER start
	;;

	# Servers status
	status)
	;;

	# Servers infos
	info)
	;;

	# Servers loads
	loads)
	;;

	# Help
	*)
		log_success_msg "Usage: $LAUNCHER {start|stop|restart|status|info|loads}" 
	;;

# End of file
esac

